import cmd
from cube import *

import torch
import torch.nn as nn
import torch.nn.functional as F
from net import mynet

# 模型加载
path='deep_q_learning_model.pkl'
try:
    net=torch.load(path)
    print("load model:",path)
except:
    print("wrong path")
    exit()
    
    
c0=cube()
c1=cp.deepcopy(c0)
for i in range(30):
    r=np.random.randint(12)
    c1.control(r)
    print(c1.controllist[r],end=' ')
c1.display()
k=0
print('\n',np.reshape(c1.arr,(6,9)),'\n')
print(c1.controllist)
while c1.losscube(c0)!=0 and k<20:
    test=torch.tensor(c1.arr.flatten().astype(np.int64))-1
    test=F.one_hot(test).flatten()
    control=net(test)
    s=torch.argmax(control)
    c1.control(int(s))
    print(c1.controllist[s.to(int)],end=' ')
    k+=1
    if k==20 and c1.losscube(c0)!=0:
        print('failed')
    if c1.losscube(c0)==0:
        print('succeed')
c1.display()

